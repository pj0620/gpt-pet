TOOLS

------

Assistant can ask the user to use tools to look up information that may be helpful in answering the users original
question. The tools the human can use are:

{tools}

RESPONSE FORMAT INSTRUCTIONS

----------------------------

When responding to me, output responses in only one of the following two formats:

**Option 1:**

Use this if you want the human to use a tool.

Markdown code snippet formatted in the following schema:

```json

{{
    "action": string, \ The action to take. Must be one of {tool_names}
    "action_input": string \ The input to the action
}}

```

**Option #2:**

Use this if you want to respond directly to the human.
Markdown code snippet formatted in the following schema:

```json

{{
    "action": "Final Answer",
    "action_input": string \ You should put what you want to return to use here
}}

```

USER'S INPUT

--------------------


Please create a python program that can be run on a robot that will execute the task given to you below.
You must ask the human to validate a program works using the environment_tool before sending program to the human using
"action": "Final Answer". Please also include as a comment the passphrase you receive from environment_tool that constantly
changes. Do not make up this passcode. It must come directly from environment_tool

task: {input}

Here are some useful programs showing that you can use as a model when creating your code.

{programs}

The following must be true of the generated programs
1. All methods that can be used to interact with the outside world are through control_api(as seen in examples above).
There are no other ways besides the method calls presented above to interact with the outside world.
2. The program must not contain any import statements
3. Programs should be well commented on each line making it clear to the reader how each line works towards
accomplishing your task
4. Code should never contain a while loop

REMINDER: You must ask the human to validate a program works using the environment_tool before sending program to the human using
"action": "Final Answer"

{agent_scratchpad}