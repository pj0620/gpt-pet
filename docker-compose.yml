version: '3.4'
services:
  # Weaver Vector DB Module
  vector-db-module:
    command:
    - --host
    - 0.0.0.0
    - --port
    - '5000'
    - --scheme
    - http
    image: semitechnologies/weaviate:1.22.7
    ports:
    - 5000:5000
    - 50051:50051
    volumes:
    - vector_db_data2:/var/lib/vector_db
    restart: on-failure:0
    environment:
      CONTEXTIONARY_URL: contextionary:9999
      IMAGE_INFERENCE_API: 'http://i2v-neural:8080'
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/vector_db'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_MODULES: 'backup-s3,text2vec-openai,img2vec-neural'
      CLUSTER_HOSTNAME: 'node1'

      # s3 backup settings
      BACKUP_S3_BUCKET: 'gpt-pet'
      BACKUP_S3_PATH: '${BACKUP_S3_PATH}'
      AWS_ACCESS_KEY_ID: '${AWS_BACKUP_ACCESS_KEY}'
      AWS_SECRET_ACCESS_KEY: '${AWS_BACKUP_SECRET_KEY}'
      AWS_REGION: '${AWS_BACKUP_REGION}'

#    depends_on:
#      i2v-neural:
#        condition: service_healthy
#  contextionary:
#    environment:
#      OCCURRENCE_WEIGHT_LINEAR_FACTOR: 0.75
#      EXTENSIONS_STORAGE_MODE: weaviate
#      EXTENSIONS_STORAGE_ORIGIN: http://vector-db-module:5000
#      NEIGHBOR_OCCURRENCE_IGNORE_PERCENTILE: 5
#      ENABLE_COMPOUND_SPLITTING: 'false'
#    image: semitechnologies/contextionary:en0.16.0-v1.2.1
#    ports:
#    - 9999:9999
  i2v-neural:
    image: semitechnologies/img2vec-pytorch:resnet50
    environment:
      ENABLE_CUDA: '0'
#    healthcheck:
#      test: curl --fail http://i2v-neural:8080/.well-known/ready || exit 1
#      interval: 15s
#      timeout: 10s
#      retries: 5
#      start_period: 10s
volumes:
  vector_db_data2: